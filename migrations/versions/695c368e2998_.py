"""empty message

Revision ID: 695c368e2998
Revises: 
Create Date: 2021-09-18 12:41:40.013652

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '695c368e2998'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('business_activity', sa.String(length=120), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('goal_answer',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('benchmark_id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('input_id', sa.Integer(), nullable=False),
    sa.Column('goal_type', sa.String(length=120), nullable=True),
    sa.Column('goal_code', sa.String(length=5), nullable=True),
    sa.Column('question_code', sa.String(length=120), nullable=True),
    sa.Column('type', sa.String(length=180), nullable=True),
    sa.Column('value_bool', sa.Boolean(), nullable=True),
    sa.Column('value_text', sa.String(length=180), nullable=True),
    sa.Column('value_number', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('goal_info',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('benchmark_id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=5), nullable=True),
    sa.Column('goal_type', sa.String(length=120), nullable=True),
    sa.Column('progress', sa.Float(), nullable=True),
    sa.Column('risk', sa.String(length=120), nullable=True),
    sa.Column('is_default_risk', sa.Boolean(), nullable=True),
    sa.Column('uses_units', sa.Boolean(), nullable=True),
    sa.Column('unit', sa.String(length=120), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('risk_assessment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('benchmark_id', sa.Integer(), nullable=False),
    sa.Column('is_product', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('risk_assessment_answer',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('benchmark_id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=True),
    sa.Column('risk', sa.String(length=20), nullable=True),
    sa.Column('group', sa.String(length=120), nullable=True),
    sa.Column('value', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('benchmark',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=40), nullable=True),
    sa.Column('start_month', sa.String(length=180), nullable=True),
    sa.Column('end_month', sa.String(length=180), nullable=True),
    sa.Column('year', sa.String(length=180), nullable=False),
    sa.Column('note', sa.String(length=180), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('risk_profile',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=40), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('current_benchmark_id', sa.Integer(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('password', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('first', sa.String(length=120), nullable=True),
    sa.Column('last', sa.String(length=120), nullable=True),
    sa.Column('admin', sa.Boolean(), nullable=True),
    sa.Column('investor', sa.Boolean(), nullable=True),
    sa.Column('onboarding_complete', sa.Boolean(), nullable=True),
    sa.Column('be_onboarding_complete', sa.Boolean(), nullable=True),
    sa.Column('pp_onboarding_complete', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('bug',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('natural_resource',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=180), nullable=False),
    sa.Column('status', sa.String(length=40), nullable=True),
    sa.Column('type', sa.String(length=180), nullable=False),
    sa.Column('benchmark_id', sa.Integer(), nullable=True),
    sa.Column('country', sa.String(length=180), nullable=False),
    sa.Column('value', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['benchmark_id'], ['benchmark.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('purchase',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('benchmark_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=40), nullable=True),
    sa.Column('name', sa.String(length=180), nullable=False),
    sa.Column('type', sa.String(length=180), nullable=False),
    sa.Column('cost', sa.Float(), nullable=False),
    sa.Column('traceable', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['benchmark_id'], ['benchmark.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('risk_profile_goal',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('risk_profile_id', sa.Integer(), nullable=True),
    sa.Column('risk', sa.String(length=12), nullable=True),
    sa.Column('code', sa.String(length=6), nullable=True),
    sa.Column('saved', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['risk_profile_id'], ['risk_profile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('site',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('benchmark_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=40), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('employees', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=180), nullable=False),
    sa.Column('country', sa.String(length=180), nullable=True),
    sa.Column('note', sa.String(length=180), nullable=True),
    sa.ForeignKeyConstraint(['benchmark_id'], ['benchmark.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('risk_profile_answer',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('goal_id', sa.Integer(), nullable=True),
    sa.Column('code', sa.String(length=20), nullable=True),
    sa.Column('value', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['goal_id'], ['risk_profile_goal.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('risk_profile_answer')
    op.drop_table('site')
    op.drop_table('risk_profile_goal')
    op.drop_table('purchase')
    op.drop_table('natural_resource')
    op.drop_table('bug')
    op.drop_table('user')
    op.drop_table('risk_profile')
    op.drop_table('benchmark')
    op.drop_table('risk_assessment_answer')
    op.drop_table('risk_assessment')
    op.drop_table('goal_info')
    op.drop_table('goal_answer')
    op.drop_table('company')
    # ### end Alembic commands ###
